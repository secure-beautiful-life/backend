{"version":3,"file":"static/js/185.5cc6011b.chunk.js","mappings":"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","sources":["api/review/review.query.ts","core/components/AppHeader.tsx","core/components/Rate.tsx","views/review/Review.styled.ts","views/review/Review.tsx"],"sourcesContent":["import * as I from './review.interface'\nimport { apiSlice } from '../../App.apiSlice'\n\nexport const reviewApi = apiSlice.injectEndpoints({\n  endpoints: (build) => ({\n    getReview: build.query<any, I.Req_Review>({\n      query: ({ offset = 0, limit = 10, product_id }) => ({\n        url: `/reviews?product_id=${product_id}&offset=${offset}&limit=${limit}`,\n      }),\n      providesTags: ['review'],\n    }),\n\n    postReview: build.mutation<any, I.Req_PostReview>({\n      query: (params) => ({\n        url: `/reviews`,\n        method: 'POST',\n        body: params,\n      }),\n      invalidatesTags: ['review'],\n    }),\n\n    deleteReview: build.mutation<any, I.Req_DeleteReview>({\n      query: ({ reviewId }) => ({\n        url: `/review-service/reviews?reviewId=${reviewId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['review'],\n    }),\n  }),\n})\n\nexport const { useGetReviewQuery, usePostReviewMutation } = reviewApi\n","import styled from 'styled-components'\nimport { getFlex, getMaxMediaScreen } from '../../designs/util/display'\nimport { getColor, getTypo } from '../../designs/util/atom'\nimport { ReactElement } from 'react'\nimport { IoIosArrowBack } from 'react-icons/io'\nimport { useNavigate } from 'react-router-dom'\n\ninterface Props {\n  title: string\n  icon?: ReactElement\n  isBack?: boolean\n}\n\nexport default function AppHeader({ title, icon, isBack }: Props) {\n  const navigate = useNavigate()\n  return (\n    <HeaderWrap data-isback={isBack}>\n      <div>\n        {isBack && (\n          <IoIosArrowBack onClick={() => navigate(-1)} size=\"1rem\" style={{ transform: `translate(-10px,3px)` }} />\n        )}\n        <span>{title}</span>\n      </div>\n      {icon && icon}\n    </HeaderWrap>\n  )\n}\n\nexport const HeaderWrap = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  height: 3.4rem;\n  padding: 1.8rem;\n  background-color: #ffffff;\n  z-index: 100;\n  ${getFlex({ js: 'space-between' })} ${getMaxMediaScreen()} span {\n    ${getTypo({ fontSize: '1.22rem', fontWeight: 700 })}\n    ${getColor('BLACK')}\n  }\n  svg {\n    width: 1.3rem;\n    height: 1.3rem;\n    ${getColor('GREY_4')}\n    cursor: pointer;\n  }\n\n  &[data-isback='true'] {\n    & > div {\n      span {\n        position: absolute;\n        right: 50%;\n        transform: translateX(50%);\n      }\n    }\n  }\n`\n","import { AiFillStar, AiOutlineStar } from 'react-icons/ai'\nimport styled from 'styled-components'\n\nexport default function Rate({ rate }: { rate: number }) {\n  return (\n    <>\n      {rate === 1 && (\n        <Wrap>\n          <AiFillStar />\n          <AiOutlineStar />\n          <AiOutlineStar />\n          <AiOutlineStar />\n          <AiOutlineStar />\n        </Wrap>\n      )}\n      {rate === 2 && (\n        <Wrap>\n          <AiFillStar />\n          <AiFillStar />\n          <AiOutlineStar />\n          <AiOutlineStar />\n          <AiOutlineStar />\n        </Wrap>\n      )}\n      {rate === 3 && (\n        <Wrap>\n          <AiFillStar />\n          <AiFillStar />\n          <AiFillStar />\n          <AiOutlineStar />\n          <AiOutlineStar />\n        </Wrap>\n      )}\n      {rate === 4 && (\n        <Wrap>\n          <AiFillStar />\n          <AiFillStar />\n          <AiFillStar />\n          <AiFillStar />\n          <AiOutlineStar />\n        </Wrap>\n      )}\n      {rate === 5 && (\n        <Wrap>\n          <AiFillStar />\n          <AiFillStar />\n          <AiFillStar />\n          <AiFillStar />\n          <AiFillStar />\n        </Wrap>\n      )}\n    </>\n  )\n}\n\nexport const Wrap = styled.div`\n  svg {\n    width: 1.2rem;\n    height: 1.2rem;\n  }\n`\n","import styled from 'styled-components'\nimport { getBgColor } from '../../designs/util/atom'\nimport { getFlex } from '../../designs/util/display'\nimport { hideScrollBar } from '../../designs/util/helpder'\n\nexport const Wrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow-y: scroll;\n  ${hideScrollBar()}\n  ${getFlex({ dir: 'column', js: 'flex-start', ai: 'flex-start' })}\n  padding: 5rem 0 3rem 0;\n  strong {\n    font-size: 1.2rem;\n  }\n  + nav {\n    display: none;\n  }\n  button {\n    margin-top: 1rem;\n  }\n  gap: 2rem;\n`\n\nexport const ReviewWrap = styled.div`\n  width: 100%;\n  position: relative;\n\n  p {\n    font-size: 1rem;\n    margin-bottom: 0.8rem;\n    line-height: 1.5rem;\n  }\n  strong {\n    font-size: 1rem;\n  }\n\n  & > svg:first-child {\n    position: absolute;\n    right: 0;\n    cursor: pointer;\n  }\n`\n\nexport const Profile = styled.div`\n  ${getFlex({ js: 'flex-start' })}\n  margin-bottom: 0.8rem;\n  strong {\n    margin-right: 0.5rem;\n  }\n`\n\nexport const ImageWrap = styled.div`\n  ${getFlex({ js: 'flex-start' })}\n  gap: 1rem;\n  overflow-y: scroll;\n  width: 100%;\n  ${hideScrollBar()}\n  img {\n    width: 5rem;\n    height: 5rem;\n    object-fit: cover;\n  }\n`\n\nexport const WriteWrap = styled.div`\n  width: 100%;\n  ${getFlex({ dir: 'column', js: 'flex-start', ai: 'flex-start' })}\n  gap: 1rem;\n  textarea {\n    font-size: 0.9rem;\n    width: 100%;\n    height: 10rem;\n    padding: 0.5rem;\n  }\n  svg {\n    cursor: pointer;\n  }\n  margin-bottom: 1rem;\n`\n\nexport const Box = styled.div`\n  width: 100%;\n  margin-top: 1.5rem;\n  height: 0.05rem;\n  ${getBgColor('GREY_1')}\n`\n","import { IoClose } from 'react-icons/io5'\nimport { useParams } from 'react-router-dom'\nimport { useCheckIsUserQuery } from '../../api/auth/auth.query'\nimport { useGetReviewQuery } from '../../api/review/review.query'\nimport AppHeader from '../../core/components/AppHeader'\nimport Rate from '../../core/components/Rate'\nimport { sliceLetter } from '../../designs/util/helpder'\nimport * as UI from './Review.styled'\n\nexport default function Review() {\n  const params = useParams()\n  const { data: reviewList } = useGetReviewQuery({ product_id: Number(params.id), offset: 0, limit: 10 })\n  const { data: userData } = useCheckIsUserQuery()\n\n  return (\n    <>\n      <AppHeader isBack title={'상품 리뷰'} />\n      <UI.Wrap>\n        <strong>리뷰 {reviewList?.totalElements}개</strong>\n        {reviewList?.content.map((review: any) => (\n          <UI.ReviewWrap>\n            {/* {userData?.name === review.name && <IoClose size={20} />} */}\n            <UI.Profile>\n              <strong>{sliceLetter(review.reviewerName, 6)}</strong>\n              <Rate rate={review.rate} />\n            </UI.Profile>\n            <p>{review.content}</p>\n            <UI.ImageWrap>\n              {review.images.length > 0 && review.images.map((img: string) => <img src={img} alt=\"img\" />)}\n            </UI.ImageWrap>\n            <UI.Box />\n          </UI.ReviewWrap>\n        ))}\n      </UI.Wrap>\n    </>\n  )\n}\n"],"names":["reviewApi","apiSlice","endpoints","build","getReview","query","offset","limit","product_id","url","providesTags","postReview","mutation","params","method","body","invalidatesTags","deleteReview","reviewId","useGetReviewQuery","usePostReviewMutation","AppHeader","title","icon","isBack","navigate","useNavigate","HeaderWrap","onClick","size","style","transform","styled","getFlex","js","getMaxMediaScreen","getTypo","fontSize","fontWeight","getColor","Rate","rate","Wrap","hideScrollBar","dir","ai","ReviewWrap","Profile","ImageWrap","WriteWrap","Box","getBgColor","Review","useParams","reviewList","Number","id","data","useCheckIsUserQuery","totalElements","content","map","review","sliceLetter","reviewerName","images","length","img","src","alt"],"sourceRoot":""}