{"version":3,"file":"static/js/713.eee9f2d1.chunk.js","mappings":"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","sources":["core/components/AppHeader.tsx","core/components/AppInput.tsx","core/constant/reg.ts","core/hooks/useInput.ts","views/sellerAdmin/SellerAdmin.styled.ts","views/userUpdate/UserUpdate.styled.ts","views/userUpdate/UserUpdate.tsx"],"sourcesContent":["import styled from 'styled-components'\nimport { getFlex, getMaxMediaScreen } from '../../designs/util/display'\nimport { getColor, getTypo } from '../../designs/util/atom'\nimport { ReactElement } from 'react'\nimport { IoIosArrowBack } from 'react-icons/io'\nimport { useNavigate } from 'react-router-dom'\n\ninterface Props {\n  title: string\n  icon?: ReactElement\n  isBack?: boolean\n}\n\nexport default function AppHeader({ title, icon, isBack }: Props) {\n  const navigate = useNavigate()\n  return (\n    <HeaderWrap data-isback={isBack}>\n      <div>\n        {isBack && (\n          <IoIosArrowBack onClick={() => navigate(-1)} size=\"1rem\" style={{ transform: `translate(-10px,3px)` }} />\n        )}\n        <span>{title}</span>\n      </div>\n      {icon && icon}\n    </HeaderWrap>\n  )\n}\n\nexport const HeaderWrap = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  height: 3.4rem;\n  padding: 1.8rem;\n  background-color: #ffffff;\n  z-index: 100;\n  ${getFlex({ js: 'space-between' })} ${getMaxMediaScreen()} span {\n    ${getTypo({ fontSize: '1.22rem', fontWeight: 700 })}\n    ${getColor('BLACK')}\n  }\n  svg {\n    width: 1.3rem;\n    height: 1.3rem;\n    ${getColor('GREY_4')}\n    cursor: pointer;\n  }\n\n  &[data-isback='true'] {\n    & > div {\n      span {\n        position: absolute;\n        right: 50%;\n        transform: translateX(50%);\n      }\n    }\n  }\n`\n","import { InputHTMLAttributes, useState } from 'react'\nimport styled from 'styled-components'\nimport { getTypo } from '../../designs/util/atom'\nimport { getFlex } from '../../designs/util/display'\n\ninterface Props {\n  placeHolder: string\n  onSetValue: (e: any) => void\n  value: string\n  label?: string\n  errorMessage?: string\n}\n\nexport default function AppInput(props: Props & InputHTMLAttributes<HTMLInputElement>) {\n  const [isBlur, setIsBlur] = useState(false)\n\n  return (\n    <Wrap>\n      {props.label && <label htmlFor={props.value}>{props.label}</label>}\n      <Input\n        type={props.type}\n        id={props.label}\n        value={props.value}\n        onChange={props.onSetValue}\n        placeholder={props.placeHolder}\n        onBlur={() => setIsBlur(true)}\n        onFocus={() => setIsBlur(false)}\n      />\n      {isBlur && props.errorMessage && <ErrorMessage>{props.errorMessage}</ErrorMessage>}\n    </Wrap>\n  )\n}\n\nconst Wrap = styled.div`\n  ${getFlex({ dir: 'column', js: 'center', ai: 'flex-start' })}\n  width: 100%;\n  label {\n    padding-left: 0.5rem;\n    margin-bottom: 0.4rem;\n    ${getTypo({ fontSize: '0.65rem', fontWeight: 500 })}\n  }\n`\n\nconst Input = styled.input`\n  width: 100%;\n  height: 2.5rem;\n  border-radius: 1rem;\n  padding-left: 1rem;\n  margin-bottom: 0.6rem;\n  background-color: #f4f4f4;\n  border: none;\n  &:last-child {\n    margin-bottom: 0;\n  }\n  &:focus {\n    outline: none;\n  }\n`\n\nconst ErrorMessage = styled.p`\n  color: red;\n  padding-left: 0.5rem;\n`\n","export const REG_USERNAME = new RegExp(/^[A-Za-z0-9]{4,12}$/)\nexport const REG_PASSWORD = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/)\nexport const REG_EMAIL = new RegExp(\n  /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\n)\nexport const REG_NAME = new RegExp(/^[ㄱ-ㅎ|가-힣|]{2,5}$/)\nexport const REG_PH = new RegExp(/^[0-9]{11}$/)\nexport const REG_BRAND = new RegExp(/^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]{2,10}$/)\nexport const REG_ADDRESS = new RegExp(/^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]{10,30}$/)\n","import { useEffect, useState } from 'react'\nimport { checkReg } from '../util'\n\nexport function useInput(initialState: any = '', regExp: any = undefined) {\n  const [value, setValue] = useState(initialState)\n  const [isValid, setIsValid] = useState(false)\n\n  const onSetValue = (e: any) => setValue(e.target.value)\n\n  useEffect(() => {\n    regExp && setIsValid(checkReg(value, regExp))\n  }, [value])\n\n  return { value, onSetValue, isValid }\n}\n","import styled from 'styled-components'\nimport { getBgColor, getColor, getTypo } from '../../designs/util/atom'\nimport { getFlex } from '../../designs/util/display'\nimport { hideScrollBar } from '../../designs/util/helpder'\n\nexport const Wrap = styled.div`\n  padding-top: 5rem;\n  padding-bottom: 7.5rem;\n  width: 100%;\n  height: 100vh;\n  overflow-y: scroll;\n  ${hideScrollBar()}\n  button {\n    margin-top: 2rem;\n  }\n`\n\nexport const FormWrap = styled.form`\n  width: 100%;\n  ${getFlex({ dir: 'column', js: 'flex-start', ai: 'center' })}\n  gap: 1rem;\n`\n\nexport const FileSelectGroup = styled.div`\n  ${getFlex({ dir: 'column', js: 'flex-start', ai: 'flex-start' })}\n  gap: 1.5rem;\n  margin: 1.5rem 0;\n`\n\nexport const FileSelectWrap = styled.div`\n  strong {\n    ${getTypo({ fontSize: '1rem', fontWeight: 500 })}\n    display: block;\n    margin-bottom: 0.5rem;\n  }\n`\n\nexport const FileSelectBox = styled.div`\n  cursor: pointer;\n  ${getFlex()}\n  width: 5rem;\n  height: 5rem;\n  font-size: 18px;\n  padding: 0 10px;\n  border-radius: 1.1rem;\n  ${getBgColor('GREY_1')}\n\n  label {\n    display: inline-block;\n    ${getFlex()}\n    width: 4rem;\n    height: 4rem;\n    ${getColor('WHITE')}\n    ${getTypo({ fontSize: '2rem', fontWeight: 500 })}\n    cursor: pointer;\n  }\n  input {\n    position: absolute;\n    width: 0;\n    height: 0;\n    padding: 0;\n    overflow: hidden;\n    border: 0;\n  }\n`\n\nexport const TextAreaGroup = styled.div`\n  ${getFlex({ dir: 'column', js: 'flex-start', ai: 'flex-start' })}\n  gap: 1.5rem;\n  margin: 1.5rem 0;\n`\n\nexport const Select = styled.select`\n  width: 50%;\n  height: 2.5rem;\n  border-radius: 1rem;\n  border: none;\n  background-color: #f4f4f4;\n  padding: 0 1rem;\n  margin-bottom: 1rem;\n  &:focus {\n    outline: none;\n  }\n`\n","import styled from 'styled-components'\nimport { getTypo } from '../../designs/util/atom'\nimport { getFlex } from '../../designs/util/display'\n\nexport const Wrap = styled.div`\n  ${getFlex({ dir: 'column', js: 'flex-start', ai: 'flex-start' })}\n  width: 100%;\n  height: 100vh;\n  padding: 5rem 0 7rem 0;\n  gap: 1rem;\n  overflow-y: scroll;\n  button {\n    /* margin-top: calc(100% - 4rem); */\n    margin-top: 1rem;\n    margin-bottom: 3rem;\n  }\n  p {\n    padding-left: 0.5rem;\n    ${getTypo({ fontSize: '0.65rem', fontWeight: 500 })}\n  }\n`\n\nexport const TempImg = styled.img`\n  width: 5rem;\n  height: 5rem;\n  object-fit: cover;\n  border-radius: 1rem;\n`\n\nexport const ImgWrap = styled.div`\n  ${getFlex({ js: 'flex-start', ai: 'center' })}\n  width: 100%;\n  gap: 2rem;\n\n  span {\n    font-size: 2.8rem;\n  }\n`\n","import { BsBell, BsCart2 } from 'react-icons/bs'\nimport * as UI from './UserUpdate.styled'\nimport AppHeader from '../../core/components/AppHeader'\nimport AppInput from '../../core/components/AppInput'\nimport AppSelectBox from '../../core/components/AppSelectBox'\nimport { REG_EMAIL, REG_NAME, REG_PASSWORD, REG_PH, REG_USERNAME, REG_ADDRESS } from '../../core/constant/reg'\nimport { useInput } from '../../core/hooks/useInput'\nimport { useSelect } from '../../core/hooks/useSelect'\nimport AppButton from '../../core/components/AppButton'\nimport {\n  useCheckIsUserQuery,\n  useDeleteUserImgMutation,\n  useUpdateUserImgMutation,\n  useUpdateUserInfoMutation,\n} from '../../api/auth/auth.query'\nimport { useAppDispatch } from '../../core/hooks/redux'\nimport { useNavigate } from 'react-router-dom'\nimport { FileSelectBox } from '../sellerAdmin/SellerAdmin.styled'\nimport { GoPlus } from 'react-icons/go'\nimport { useState } from 'react'\nimport { BASE_URL } from '../../api/constant'\n\nfunction HeaderIcon() {\n  return (\n    <div>\n      <BsBell style={{ marginRight: '1.3rem' }} />\n      <BsCart2 />\n    </div>\n  )\n}\n\nexport default function UserUpdate() {\n  const navigate = useNavigate()\n\n  const [profileImg, setProfileImg] = useState<any>()\n\n  const profileImgHandler = (e: any) => {\n    const files = e.target.files\n    if (files.length <= 0) return console.log('files does not exist')\n    const file = files[0]\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => {\n      const base64 = reader.result\n      setProfileImg(base64)\n      return base64\n    }\n  }\n\n  const { data: userData, isLoading, isError } = useCheckIsUserQuery()\n  const [updateUser] = useUpdateUserInfoMutation()\n  const [updateImg] = useUpdateUserImgMutation()\n  const [deleteImg] = useDeleteUserImgMutation()\n\n  const { value: email, onSetValue: setEmail, isValid: isValidEmail } = useInput(userData?.email, REG_EMAIL)\n  const { value: phone, onSetValue: setPhone, isValid: isValidPh } = useInput(userData?.phone, REG_PH)\n  const { value: address, onSetValue: setAddress, isValid: isVaildAddress } = useInput(userData?.address, REG_ADDRESS)\n\n  const isAllValid = [isValidEmail, isValidPh, isVaildAddress].every((ele) => ele === true)\n  const onUpdateProfile = async () => {\n    const values = {\n      email: email ? email : userData?.email,\n      phone: phone ? phone : userData?.phone,\n      address: address ? address : userData?.address,\n    }\n\n    updateUser(values)\n      .unwrap()\n      .then((res: any) => {\n        window.alert('프로필을 수정했습니다.')\n        navigate('/user')\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const onUpdateImg = async () => {\n    const values = {\n      image_string: profileImg,\n      file_name: `${userData?.email}img`,\n    }\n\n    updateImg(values)\n      .unwrap()\n      .then((res: any) => {\n        window.alert('이미지를 저장했습니다.')\n        navigate('/user')\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const onDeleteUpdateImg = async () => {\n    const values = {\n      image_string: profileImg,\n      file_name: `${userData?.email}img`,\n    }\n\n    deleteImg()\n      .unwrap()\n      .then((res: any) => {\n        console.log(res)\n        updateImg(values)\n          .unwrap()\n          .then((res: any) => {\n            window.alert('이미지를 저장했습니다.')\n            navigate('/user')\n          })\n          .catch((err) => {\n            console.log(err)\n          })\n      })\n  }\n\n  return (\n    <>\n      <AppHeader isBack title=\"기본 정보 수정\" />\n      <UI.Wrap>\n        <AppInput\n          type=\"text\"\n          label=\"이메일 변경\"\n          placeHolder={String(userData?.email)}\n          value={email}\n          onSetValue={setEmail}\n          errorMessage={!isValidEmail ? '이메일 형식으로 입력해주세요.' : ''}\n        />\n        <AppInput\n          type=\"text\"\n          label=\"핸드폰 번호 변경\"\n          placeHolder={String(userData?.phone)}\n          value={phone}\n          onSetValue={setPhone}\n          errorMessage={!isValidPh ? ' - 없이 11자리 입력해주세요.' : ''}\n        />\n        <AppInput\n          type=\"text\"\n          label=\"지역 변경\"\n          placeHolder={String(userData?.address)}\n          value={address}\n          onSetValue={setAddress}\n          errorMessage={!isVaildAddress ? '지역은 10자 이상 30자 이하로 작성해주세요.' : ''}\n        />\n        <AppButton disabled={!isAllValid} content=\"변경 정보 저장하기\" onClick={onUpdateProfile} radius=\"0.3rem\" />\n        <UI.ImgWrap>\n          <FileSelectBox>\n            <input type=\"file\" id=\"imageUrl\" onChange={profileImgHandler} />\n            <label htmlFor=\"imageUrl\">\n              <GoPlus />\n            </label>\n          </FileSelectBox>\n          {userData?.profile_image_url && (\n            <>\n              <UI.TempImg src={`${userData?.profile_image_url}`} alt=\"curr img\" />\n              <span>➡️</span>\n            </>\n          )}\n          {profileImg && <UI.TempImg src={`${profileImg}`} alt=\"update profile img\" />}\n        </UI.ImgWrap>\n        <AppButton\n          content={userData?.profile_image_url ? '프로필 이미지 변경하기' : '프로필 이미지 저장하기'}\n          onClick={userData?.profile_image_url ? onDeleteUpdateImg : onUpdateImg}\n          radius=\"0.3rem\"\n        />\n      </UI.Wrap>\n    </>\n  )\n}\n"],"names":["AppHeader","title","icon","isBack","navigate","useNavigate","HeaderWrap","onClick","size","style","transform","styled","getFlex","js","getMaxMediaScreen","getTypo","fontSize","fontWeight","getColor","AppInput","props","useState","isBlur","setIsBlur","Wrap","label","htmlFor","value","Input","type","id","onChange","onSetValue","placeholder","placeHolder","onBlur","onFocus","errorMessage","ErrorMessage","dir","ai","REG_USERNAME","RegExp","REG_PASSWORD","REG_EMAIL","REG_NAME","REG_PH","REG_BRAND","REG_ADDRESS","useInput","initialState","regExp","undefined","setValue","isValid","setIsValid","e","target","useEffect","checkReg","hideScrollBar","FormWrap","FileSelectGroup","FileSelectWrap","FileSelectBox","getBgColor","Select","TempImg","ImgWrap","UserUpdate","profileImg","setProfileImg","useCheckIsUserQuery","userData","data","isLoading","isError","useUpdateUserInfoMutation","updateUser","useUpdateUserImgMutation","updateImg","useDeleteUserImgMutation","deleteImg","email","setEmail","isValidEmail","phone","setPhone","isValidPh","address","setAddress","isVaildAddress","isAllValid","every","ele","onUpdateProfile","values","unwrap","then","res","window","alert","catch","err","console","log","onUpdateImg","image_string","file_name","onDeleteUpdateImg","String","disabled","content","radius","files","length","file","reader","FileReader","readAsDataURL","onload","base64","result","profile_image_url","src","alt"],"sourceRoot":""}