{"version":3,"file":"static/js/424.aafe758c.chunk.js","mappings":"+MAae,SAASA,EAAT,GAAoD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OACzCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACC,EAAD,CAAY,cAAaH,EAAzB,WACE,2BACGA,IACC,SAAC,MAAD,CAAgBI,QAAS,kBAAMH,GAAU,EAAhB,EAAoBI,KAAK,OAAOC,MAAO,CAAEC,UAAU,2BAE9E,0BAAOT,OAERC,GAAQA,IAGd,CAEM,IAAMI,EAAaK,EAAAA,GAAAA,IAAH,mcAQnBC,EAAAA,EAAAA,IAAQ,CAAEC,GAAI,mBAAsBC,EAAAA,EAAAA,OAClCC,EAAAA,EAAAA,IAAQ,CAAEC,SAAU,UAAWC,WAAY,OAC3CC,EAAAA,EAAAA,IAAS,UAKTA,EAAAA,EAAAA,IAAS,U,uMCrCA,SAASC,IACtB,OAA+CC,EAAAA,EAAAA,MAAjCC,EAAd,EAAQC,KAAR,EAAwBC,UAAxB,EAAmCC,QAEnC,OACE,iCACE,SAAC,IAAD,CAAWvB,MAAM,4BAAQE,QAAM,KAC/B,UAACsB,EAAD,YACE,gBAAKC,IAAG,UAAKC,EAAAA,GAAL,cAAgBN,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAUO,mBAAqBC,IAAI,UAC3D,4BACE,UAACC,EAAD,YACE,gDACA,8BAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAAUU,WAEhB,UAACD,EAAD,YACE,mEACA,8BAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAAUW,YAEhB,UAACF,EAAD,YACE,gDACA,8BAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAAUY,aAEhB,UAACH,EAAD,YACE,sDACA,8BAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAAUa,YAEhB,UAACJ,EAAD,YACE,gDACA,8BAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAAUc,qBAMzB,CAEM,IAAMV,EAAOd,EAAAA,GAAAA,IAAH,4LACbC,EAAAA,EAAAA,IAAQ,CAAEwB,IAAK,YASbxB,EAAAA,EAAAA,IAAQ,CAAEwB,IAAK,SAAUvB,GAAI,aAAcwB,GAAI,gBAMxCP,EAAWnB,EAAAA,GAAAA,IAAH,uHACjBC,EAAAA,EAAAA,IAAQ,CAAEC,GAAI,aAAcwB,GAAI,e","sources":["core/components/AppHeader.tsx","views/user/UserProfile.tsx"],"sourcesContent":["import styled from 'styled-components'\nimport { getFlex, getMaxMediaScreen } from '../../designs/util/display'\nimport { getColor, getTypo } from '../../designs/util/atom'\nimport { ReactElement } from 'react'\nimport { IoIosArrowBack } from 'react-icons/io'\nimport { useNavigate } from 'react-router-dom'\n\ninterface Props {\n  title: string\n  icon?: ReactElement\n  isBack?: boolean\n}\n\nexport default function AppHeader({ title, icon, isBack }: Props) {\n  const navigate = useNavigate()\n  return (\n    <HeaderWrap data-isback={isBack}>\n      <div>\n        {isBack && (\n          <IoIosArrowBack onClick={() => navigate(-1)} size=\"1rem\" style={{ transform: `translate(-10px,3px)` }} />\n        )}\n        <span>{title}</span>\n      </div>\n      {icon && icon}\n    </HeaderWrap>\n  )\n}\n\nexport const HeaderWrap = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  height: 3.4rem;\n  padding: 1.8rem;\n  background-color: #ffffff;\n  z-index: 100;\n  ${getFlex({ js: 'space-between' })} ${getMaxMediaScreen()} span {\n    ${getTypo({ fontSize: '1.22rem', fontWeight: 700 })}\n    ${getColor('BLACK')}\n  }\n  svg {\n    width: 1.3rem;\n    height: 1.3rem;\n    ${getColor('GREY_4')}\n    cursor: pointer;\n  }\n\n  &[data-isback='true'] {\n    & > div {\n      span {\n        position: absolute;\n        right: 50%;\n        transform: translateX(50%);\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\nimport { useCheckIsUserQuery } from '../../api/auth/auth.query'\nimport { BASE_URL } from '../../api/constant'\nimport AppHeader from '../../core/components/AppHeader'\nimport { getFlex } from '../../designs/util/display'\n\nexport default function UserProfile() {\n  const { data: userInfo, isLoading, isError } = useCheckIsUserQuery()\n\n  return (\n    <>\n      <AppHeader title=\"내 프로필\" isBack />\n      <Wrap>\n        <img src={`${BASE_URL}${userInfo?.profile_image_url}`} alt=\"user\" />\n        <div>\n          <InfoWrap>\n            <strong>이름 :</strong>\n            <p>{userInfo?.name}</p>\n          </InfoWrap>\n          <InfoWrap>\n            <strong>핸드폰 번호 :</strong>\n            <p>{userInfo?.phone}</p>\n          </InfoWrap>\n          <InfoWrap>\n            <strong>성별 :</strong>\n            <p>{userInfo?.gender}</p>\n          </InfoWrap>\n          <InfoWrap>\n            <strong>이메일 :</strong>\n            <p>{userInfo?.email}</p>\n          </InfoWrap>\n          <InfoWrap>\n            <strong>주소 :</strong>\n            <p>{userInfo?.address}</p>\n          </InfoWrap>\n        </div>\n      </Wrap>\n    </>\n  )\n}\n\nexport const Wrap = styled.div`\n  ${getFlex({ dir: 'column' })}\n  width: 100%;\n  height: 100%;\n  gap: 2rem;\n  img {\n    width: 80%;\n    height: auto;\n  }\n  & > div {\n    ${getFlex({ dir: 'column', js: 'flex-start', ai: 'flex-start' })}\n    width: 80%;\n    gap: 1rem;\n  }\n`\n\nexport const InfoWrap = styled.div`\n  ${getFlex({ js: 'flex-start', ai: 'flex-start' })}\n  width: 80%;\n  strong {\n    font-size: 1rem;\n  }\n  p {\n    font-size: 1rem;\n  }\n`\n"],"names":["AppHeader","title","icon","isBack","navigate","useNavigate","HeaderWrap","onClick","size","style","transform","styled","getFlex","js","getMaxMediaScreen","getTypo","fontSize","fontWeight","getColor","UserProfile","useCheckIsUserQuery","userInfo","data","isLoading","isError","Wrap","src","BASE_URL","profile_image_url","alt","InfoWrap","name","phone","gender","email","address","dir","ai"],"sourceRoot":""}