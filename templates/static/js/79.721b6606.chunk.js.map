{"version":3,"file":"static/js/79.721b6606.chunk.js","mappings":"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","sources":["core/components/AppInput.tsx","core/components/AppLink.tsx","core/components/modal/AppModal.tsx","core/constant/reg.ts","core/hooks/useInput.ts","views/signup/Signup.styled.ts","core/components/AppSelectBox.tsx","core/hooks/useSelect.ts","views/signup/SignUp.tsx"],"sourcesContent":["import { InputHTMLAttributes, useState } from 'react'\nimport styled from 'styled-components'\nimport { getTypo } from '../../designs/util/atom'\nimport { getFlex } from '../../designs/util/display'\n\ninterface Props {\n  placeHolder: string\n  onSetValue: (e: any) => void\n  value: string\n  label?: string\n  errorMessage?: string\n}\n\nexport default function AppInput(props: Props & InputHTMLAttributes<HTMLInputElement>) {\n  const [isBlur, setIsBlur] = useState(false)\n\n  return (\n    <Wrap>\n      {props.label && <label htmlFor={props.value}>{props.label}</label>}\n      <Input\n        type={props.type}\n        id={props.label}\n        value={props.value}\n        onChange={props.onSetValue}\n        placeholder={props.placeHolder}\n        onBlur={() => setIsBlur(true)}\n        onFocus={() => setIsBlur(false)}\n      />\n      {isBlur && props.errorMessage && <ErrorMessage>{props.errorMessage}</ErrorMessage>}\n    </Wrap>\n  )\n}\n\nconst Wrap = styled.div`\n  ${getFlex({ dir: 'column', js: 'center', ai: 'flex-start' })}\n  width: 100%;\n  label {\n    padding-left: 0.5rem;\n    margin-bottom: 0.4rem;\n    ${getTypo({ fontSize: '0.65rem', fontWeight: 500 })}\n  }\n`\n\nconst Input = styled.input`\n  width: 100%;\n  height: 2.5rem;\n  border-radius: 1rem;\n  padding-left: 1rem;\n  margin-bottom: 0.6rem;\n  background-color: #f4f4f4;\n  border: none;\n  &:last-child {\n    margin-bottom: 0;\n  }\n  &:focus {\n    outline: none;\n  }\n`\n\nconst ErrorMessage = styled.p`\n  color: red;\n  padding-left: 0.5rem;\n`\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { getColor, getTypo } from '../../designs/util/atom'\n\ninterface Props {\n  href: string\n  content: string\n}\n\nexport default function AppLink({ href, content }: Props) {\n  return (\n    <Wrap>\n      <Link to={href}>{content}</Link>\n    </Wrap>\n  )\n}\n\nexport const Wrap = styled.div`\n  width: 100%;\n  a {\n    display: block;\n    width: 100%;\n    padding-right: 1rem;\n    ${getTypo({ fontSize: '0.8rem', fontWeight: 500 })}\n    ${getColor('GREY_BROWN')}\n    text-align: right;\n    &:visited {\n      color: inherit;\n    }\n  }\n`\n","import { Player } from '@lottiefiles/react-lottie-player'\nimport successAnimation from '../../../designs/assets/lottieSuccess.json'\nimport errorAnimation from '../../../designs/assets/lottieError.json'\nimport styled from 'styled-components'\nimport { VscChromeClose } from 'react-icons/vsc'\nimport { getBgColor, getTypo } from '../../../designs/util/atom'\nimport { getBoxShadow } from '../../../designs/util/boxShadow'\nimport { getFlex, getScreenCenter } from '../../../designs/util/display'\n\ninterface Props {\n  type: 'small'\n  icon?: 'error' | 'success'\n  children: JSX.Element\n}\n\nexport default function AppModal({ type, icon, children }: Props) {\n  if (type === 'small') {\n    return (\n      <SmallWrap>\n        <>\n          {icon === 'success' && (\n            <Player autoplay loop src={successAnimation} style={{ height: '80px', width: '80px' }} />\n          )}\n          {icon === 'error' && <Player autoplay loop src={errorAnimation} style={{ height: '80px', width: '80px' }} />}\n          {children}\n        </>\n      </SmallWrap>\n    )\n  } else return <></>\n}\n\nconst SmallWrap = styled.div`\n  ${getBgColor('WHITE')}\n  ${getScreenCenter()}\n  ${getFlex({ dir: 'column', js: 'flex-start' })}\n  width: 18rem;\n  height: 14rem;\n  padding: 1rem;\n  border-radius: 2rem;\n  ${getBoxShadow('TYPE_A')}\n  gap: 1rem;\n  z-index: 999;\n  + div {\n    width: 100%;\n  }\n  p {\n    ${getTypo({ fontSize: '1rem' })}\n    text-align: center;\n    margin-bottom: 2rem;\n    width: 100%;\n  }\n`\n","export const REG_USERNAME = new RegExp(/^[A-Za-z0-9]{4,12}$/)\nexport const REG_PASSWORD = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/)\nexport const REG_EMAIL = new RegExp(\n  /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\n)\nexport const REG_NAME = new RegExp(/^[ㄱ-ㅎ|가-힣|]{2,5}$/)\nexport const REG_PH = new RegExp(/^[0-9]{11}$/)\nexport const REG_BRAND = new RegExp(/^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]{2,10}$/)\nexport const REG_ADDRESS = new RegExp(/^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]{10,30}$/)\n","import { useEffect, useState } from 'react'\nimport { checkReg } from '../util'\n\nexport function useInput(initialState: any = '', regExp: any = undefined) {\n  const [value, setValue] = useState(initialState)\n  const [isValid, setIsValid] = useState(false)\n\n  const onSetValue = (e: any) => setValue(e.target.value)\n\n  useEffect(() => {\n    regExp && setIsValid(checkReg(value, regExp))\n  }, [value])\n\n  return { value, onSetValue, isValid }\n}\n","import styled from 'styled-components'\nimport { getFlex } from '../../designs/util/display'\nimport { hideScrollBar } from '../../designs/util/helpder'\n\nexport const Wrap = styled.div`\n  ${getFlex({ dir: 'column', js: 'center', ai: 'center' })}\n  width: 100%;\n  height: 100vh;\n  padding: 5rem 0 8rem 0;\n  overflow-y: scroll;\n  ${hideScrollBar()}\n\n  h1 {\n    font-size: 1.4rem;\n  }\n\n  + div {\n    transform: translateY(-30rem);\n  }\n  + nav {\n    display: none;\n  }\n  button {\n    margin-bottom: 1.5rem;\n  }\n`\n\nexport const FormWrap = styled.div`\n  ${getFlex({ dir: 'column', js: 'center', ai: 'flex-start' })}\n  width: 100%;\n  gap: 1.5rem;\n  margin-top: 1rem;\n`\n\nexport const selectWrap = styled.div`\n  ${getFlex({ ai: 'flex-start' })}\n  width: 100%;\n  gap: 1rem;\n  > select {\n    width: 50%;\n    margin-bottom: 0.5rem;\n  }\n  input {\n    width: 100%;\n  }\n`\n\nexport const ModalContent = styled.div`\n  width: 100%;\n`\n","import styled from 'styled-components'\nimport { getTypo } from '../../designs/util/atom'\nimport { getFlex } from '../../designs/util/display'\n\ninterface Props {\n  optionList: Array<string>\n  onSetValue: (e: any) => void\n  label?: string\n}\n\nexport default function AppSelectBox({ optionList, onSetValue, label }: Props) {\n  return (\n    <Wrap>\n      {label && <Label htmlFor={`${label}-id`}>{label}</Label>}\n      <Select id={`${label}-id`} name=\"gender\" onChange={onSetValue}>\n        {optionList.map((option) => (\n          <option key={option}>{option}</option>\n        ))}\n      </Select>\n    </Wrap>\n  )\n}\n\nconst Wrap = styled.div`\n  ${getFlex({ dir: 'column', js: 'center', ai: 'flex-start' })}\n  width: 100%;\n  label {\n    padding-left: 0.5rem;\n    margin-bottom: 0.4rem;\n    ${getTypo({ fontSize: '0.65rem', fontWeight: 500 })}\n  }\n`\n\nconst Label = styled.label``\n\nconst Select = styled.select`\n  width: 100%;\n  height: 2.5rem;\n  border-radius: 1rem;\n  border: none;\n  background-color: #f4f4f4;\n  padding: 0 1rem;\n  &:focus {\n    outline: none;\n  }\n`\n","import { useState } from 'react'\n\nexport function useSelect(optionList: Array<string>) {\n  const [value, setValue] = useState(optionList[0])\n  const onSetValue = (e: any) => setValue(e.currentTarget.value)\n\n  return { value, onSetValue, optionList }\n}\n","import { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport * as UI from './Signup.styled'\nimport AppButton from '../../core/components/AppButton'\nimport AppInput from '../../core/components/AppInput'\nimport AppSelectBox from '../../core/components/AppSelectBox'\nimport { useInput } from '../../core/hooks/useInput'\nimport { useRequestSignupMutation } from '../../api/auth/auth.query'\nimport { useSelect } from '../../core/hooks/useSelect'\nimport { REG_BRAND, REG_EMAIL, REG_NAME, REG_PASSWORD, REG_USERNAME } from '../../core/constant/reg'\nimport AppLink from '../../core/components/AppLink'\nimport { cleanupState, setIsDimmed } from '../../App.slice'\nimport AppModal from '../../core/components/modal/AppModal'\nimport { useAppDispatch } from '../../core/hooks/redux'\nimport { Modal_Type } from './signup.interface'\n\nexport default function SignUp() {\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n  const [signUp, { isLoading, error }] = useRequestSignupMutation()\n  const [isModal, setIsModal] = useState<Modal_Type>(null)\n\n  const { value: username, onSetValue: setUserName, isValid: isValidUserName } = useInput('', REG_USERNAME)\n  const { value: password, onSetValue: setPassword, isValid: isValidPw } = useInput('', REG_PASSWORD)\n  const { value: passwordCheck, onSetValue: setPasswordCheck, isValid: isValidPWCheck } = useInput('', REG_PASSWORD)\n  const { value: type, onSetValue: setType, optionList: typeList } = useSelect(['customer', 'brand'])\n  const { value: brand_name, onSetValue: setbrand_name, isValid: isVaildBrand } = useInput('', REG_BRAND)\n  const { value: name, onSetValue: setName, isValid: isValidName } = useInput('', REG_NAME)\n  const { value: gender, onSetValue: setGender, optionList: genderList } = useSelect(['여성', '남성'])\n  const { value: email, onSetValue: setEmail, isValid: isValidEmail } = useInput('', REG_EMAIL)\n  const { value: phone, onSetValue: setPhone } = useInput(0)\n  const { value: address, onSetValue: setAddress } = useInput('')\n\n  const isAllValid = [isValidUserName, isValidPw, isValidPWCheck, isValidName, isValidEmail].every(\n    (ele) => ele === true\n  )\n\n  const onSignUp = async () => {\n    let values\n    if (type === 'customer') {\n      values = {\n        username,\n        password,\n        password_check: passwordCheck,\n        role_id: 3,\n        name,\n        type,\n        gender,\n        email,\n        phone,\n        address,\n      }\n    } else {\n      values = {\n        username,\n        password,\n        password_check: passwordCheck,\n        role_id: 3,\n        name,\n        type,\n        gender,\n        email,\n        phone,\n        address,\n        brand_name: brand_name,\n      }\n    }\n\n    signUp(values)\n      .unwrap()\n      .then(() => {\n        dispatch(setIsDimmed(true))\n        setIsModal('success')\n      })\n      .catch(() => {\n        dispatch(setIsDimmed(true))\n        setIsModal('error')\n      })\n  }\n\n  useEffect(() => {\n    return () => {\n      dispatch(cleanupState())\n    }\n  }, [dispatch])\n\n  return (\n    <UI.Wrap>\n      <h1>회원가입</h1>\n      <UI.FormWrap>\n        <AppInput\n          type=\"text\"\n          label=\"아이디\"\n          placeHolder=\"영어, 숫자 4 ~ 13 글자\"\n          value={username}\n          onSetValue={setUserName}\n          errorMessage={!isValidUserName ? '아이디는 영어, 숫자로 4글자 이상, 13글자 이하입니다.' : ''}\n        />\n        <AppInput\n          type=\"password\"\n          label=\"비밀번호\"\n          placeHolder=\"영어, 숫자, 특수문자 8 ~ 13 글자\"\n          value={password}\n          onSetValue={setPassword}\n          errorMessage={!isValidPw ? '아이디는 영어 대소문자, 숫자, 특수문자로 8글자 이상, 13글자 이하입니다.' : ''}\n        />\n        <AppInput\n          type=\"password\"\n          label=\"비밀번호 확인\"\n          placeHolder=\"영어, 숫자, 특수문자 8 ~ 13 글자\"\n          value={passwordCheck}\n          onSetValue={setPasswordCheck}\n          errorMessage={!isValidPw ? '아이디는 영어 대소문자, 숫자, 특수문자로 8글자 이상, 13글자 이하입니다.' : ''}\n        />\n        <UI.selectWrap>\n          <AppSelectBox label=\"회원 타입\" optionList={typeList} onSetValue={setType} />\n          {type === 'brand' && (\n            <AppInput\n              type=\"text\"\n              label={'브랜드 이름'}\n              placeHolder=\"brand..\"\n              value={brand_name}\n              onSetValue={setbrand_name}\n              errorMessage={!isVaildBrand ? '브랜드 이름은 2자 이상 10자 이하여야 합니다.' : ''}\n            />\n          )}\n          <AppInput\n            type=\"text\"\n            label={'이름'}\n            placeHolder=\"이름\"\n            value={name}\n            onSetValue={setName}\n            errorMessage={!isValidName ? '이름은 한글로 2자 이상 5자 이하여야 합니다.' : ''}\n          />\n        </UI.selectWrap>\n        <AppSelectBox label=\"성별\" optionList={genderList} onSetValue={setGender} />\n        <AppInput\n          type=\"text\"\n          label=\"이메일\"\n          placeHolder=\"email@naver.com\"\n          value={email}\n          onSetValue={setEmail}\n          errorMessage={!isValidEmail ? '이메일 형식으로 입력해주세요.' : ''}\n        />\n        <AppInput type=\"text\" label=\"핸드폰 번호\" placeHolder=\"010-1234-5678\" value={phone} onSetValue={setPhone} />\n        <AppInput type=\"text\" label=\"지역\" placeHolder=\"address\" value={address} onSetValue={setAddress} />\n        <AppButton content=\"회원가입\" radius=\"2rem\" onClick={onSignUp} disabled={!isAllValid || address === ''} />\n      </UI.FormWrap>\n      <AppLink href=\"/login\" content=\"로그인 하러가기\" />\n      {isModal === 'success' && (\n        <AppModal type=\"small\" icon=\"success\">\n          <UI.ModalContent>\n            <p>\n              안녕하세요 ! <strong>{name}</strong>님\n            </p>\n            <AppButton\n              content=\"로그인 하러 가기\"\n              onClick={() => {\n                dispatch(setIsDimmed(false))\n                navigate('/login')\n              }}\n              radius=\"1.5rem\"\n              background=\"#9DAABB\"\n            />\n          </UI.ModalContent>\n        </AppModal>\n      )}\n      {isModal === 'error' && (\n        <AppModal type=\"small\" icon=\"error\">\n          <div>\n            <p>{'다시 입력해주세요.'}</p>\n            <AppButton\n              content=\"확인\"\n              onClick={() => {\n                dispatch(setIsDimmed(false))\n                setIsModal(null)\n              }}\n              radius=\"1.5rem\"\n              background=\"#9DAABB\"\n            />\n          </div>\n        </AppModal>\n      )}\n    </UI.Wrap>\n  )\n}\n"],"names":["AppInput","props","useState","isBlur","setIsBlur","Wrap","label","htmlFor","value","Input","type","id","onChange","onSetValue","placeholder","placeHolder","onBlur","onFocus","errorMessage","ErrorMessage","styled","getFlex","dir","js","ai","getTypo","fontSize","fontWeight","AppLink","href","content","to","getColor","AppModal","icon","children","SmallWrap","autoplay","loop","src","successAnimation","style","height","width","errorAnimation","getBgColor","getScreenCenter","getBoxShadow","REG_USERNAME","RegExp","REG_PASSWORD","REG_EMAIL","REG_NAME","REG_PH","REG_BRAND","REG_ADDRESS","useInput","initialState","regExp","undefined","setValue","isValid","setIsValid","e","target","useEffect","checkReg","hideScrollBar","FormWrap","selectWrap","ModalContent","AppSelectBox","optionList","Label","Select","name","map","option","useSelect","currentTarget","SignUp","dispatch","useAppDispatch","navigate","useNavigate","useRequestSignupMutation","signUp","isLoading","error","isModal","setIsModal","username","setUserName","isValidUserName","password","setPassword","isValidPw","passwordCheck","setPasswordCheck","isValidPWCheck","setType","typeList","brand_name","setbrand_name","isVaildBrand","setName","isValidName","gender","setGender","genderList","email","setEmail","isValidEmail","phone","setPhone","address","setAddress","isAllValid","every","ele","onSignUp","password_check","role_id","unwrap","then","setIsDimmed","catch","cleanupState","AppButton","radius","onClick","disabled","background"],"sourceRoot":""}